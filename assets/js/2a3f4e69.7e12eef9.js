"use strict";(self.webpackChunksonallux_github_io=self.webpackChunksonallux_github_io||[]).push([[6041],{8823:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=t(4848),n=t(8453);const o={tags:["javascript","performance"]},a="Object property order",c={id:"javascript/performance/object-property-order",title:"Object property order",description:"Consider you want to model a 3D-vector in Javascript with an object having a x, y and z property. When creating a new vector you have 6 possible orders for the properties:",source:"@site/docs/javascript/performance/object-property-order.md",sourceDirName:"javascript/performance",slug:"/javascript/performance/object-property-order",permalink:"/docs/javascript/performance/object-property-order",draft:!1,unlisted:!1,editUrl:"https://github.com/sonallux/sonallux.github.io/tree/main/docs/javascript/performance/object-property-order.md",tags:[{label:"javascript",permalink:"/docs/tags/javascript"},{label:"performance",permalink:"/docs/tags/performance"}],version:"current",frontMatter:{tags:["javascript","performance"]},sidebar:"defaultSidebar",previous:{title:"Javascript performance",permalink:"/docs/javascript/performance/"},next:{title:"RxJS",permalink:"/docs/javascript/rxjs"}},i={},d=[{value:"HiddenClasses",id:"hiddenclasses",level:3},{value:"Benchmark",id:"benchmark",level:2},{value:"Setup code",id:"setup-code",level:3},{value:"Test case 1: Ordered properties",id:"test-case-1-ordered-properties",level:3},{value:"Test case 2: Unordered properties",id:"test-case-2-unordered-properties",level:3},{value:"Resources",id:"resources",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components},{Details:t}=r;return t||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"object-property-order",children:"Object property order"}),"\n",(0,s.jsxs)(r.p,{children:["Consider you want to model a 3D-vector in Javascript with an object having a ",(0,s.jsx)(r.code,{children:"x"}),", ",(0,s.jsx)(r.code,{children:"y"})," and ",(0,s.jsx)(r.code,{children:"z"})," property. When creating a new vector you have 6 possible orders for the properties:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const a1 = {x: 1, y: 2, z: 3};\nconst a2 = {x: 1, z: 3, y: 2};\nconst a3 = {y: 2, x: 1, z: 3};\nconst a4 = {y: 2, z: 3, x: 1};\nconst a5 = {z: 3, x: 1, y: 3};\nconst a6 = {z: 3, y: 3, x: 1};\n"})}),"\n",(0,s.jsxs)(r.p,{children:["When accessing the properties only using direct property access (e.g. ",(0,s.jsx)(r.code,{children:"a.x"})," or ",(0,s.jsx)(r.code,{children:"a.z"}),") there is no obvious difference between the 6 sorting. Of course ",(0,s.jsx)(r.code,{children:"Object.keys()"}),", ",(0,s.jsx)(r.code,{children:"Object.values()"})," or ",(0,s.jsx)(r.code,{children:"Object.entries()"})," will return different values for the different sorting."]}),"\n",(0,s.jsx)(r.h3,{id:"hiddenclasses",children:"HiddenClasses"}),"\n",(0,s.jsx)(r.p,{children:"But there is also a real performance implication when mixing the order of the properties. In V8 each Javascript object has a HiddenClass associated that keeps information about the object shape. Because of the dynamic nature of Javascript, these HiddenClasses are created on the fly and updated dynamically as objects change. Objects with the same structure (e.g. same named properties and same order) share the same HiddenClass. Therefore, one should always use the same ordering of properties, because then HiddenClasses can be reused and the property lookup can be more easily optimized."}),"\n",(0,s.jsx)(r.h2,{id:"benchmark",children:"Benchmark"}),"\n",(0,s.jsxs)(r.p,{children:["To demonstrate this I have created a ",(0,s.jsx)(r.a,{href:"https://jsperf.app/noqume",children:"little benchmark on jsperf.app"}),". The benchmark tests adding 6 vectors. In one test case all vectors use the same property order and in the other test case all vectors have different properties sorting. The test case with equal property ordering is over 50% faster than the other."]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Benchmark code"}),(0,s.jsx)(r.h3,{id:"setup-code",children:"Setup code"}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const ordered = [];\nconst unordered = [];\n\nfor (let i = 0; i < 6; i++) {\n\tconst x = Math.random();\n\tconst y = Math.random();\n\tconst z = Math.random();\n\t\n\tordered.push({x, y, z});\n\n\tif (i === 0) {\n\t\tunordered.push({x, y, z});\n\t} else if (i === 1) {\n\t\tunordered.push({x, z, y});\n\t} else if (i === 2) {\n\t\tunordered.push({y, x, z});\n\t} else if (i === 3) {\n\t\tunordered.push({y, z, x});\n\t} else if (i === 4) {\n\t\tunordered.push({z, x, y});\n\t} else {\n\t\tunordered.push({z, y, x});\n\t}\n}\n"})}),(0,s.jsx)(r.h3,{id:"test-case-1-ordered-properties",children:"Test case 1: Ordered properties"}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const result = ordered.reduce(\n  (a, b) => ({x: a.x + b.x, y: a.y + b.y, z: a.z + b.z}),\n  {x: 0, y: 0, z: 0}\n)\n"})}),(0,s.jsx)(r.h3,{id:"test-case-2-unordered-properties",children:"Test case 2: Unordered properties"}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const result = unordered.reduce(\n  (a, b) => ({x: a.x + b.x, y: a.y + b.y, z: a.z + b.z}),\n  {x: 0, y: 0, z: 0}\n)\n"})})]}),"\n",(0,s.jsx)(r.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["V8 Blog Post: ",(0,s.jsx)(r.a,{href:"https://v8.dev/blog/fast-properties",children:"Fast properties in V8"})]}),"\n",(0,s.jsxs)(r.li,{children:["Blog Post: ",(0,s.jsx)(r.a,{href:"https://mrale.ph/blog/2015/01/11/whats-up-with-monomorphism.html",children:"What's up with monomorphism?"})]}),"\n"]})]})}function l(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var s=t(6540);const n={},o=s.createContext(n);function a(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);