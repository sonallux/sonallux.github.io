"use strict";(self.webpackChunksonallux_github_io=self.webpackChunksonallux_github_io||[]).push([[1031],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=s,v=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(v,o(o({ref:t},u),{},{components:n})):a.createElement(v,o({ref:t},u))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9585:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(7462),s=(n(7294),n(3905));const r={tags:["java","test-containers","eventual-consistency","database","distributed-system"]},o="Eventual Consistency",i={unversionedId:"eventual-consistency",id:"eventual-consistency",title:"Eventual Consistency",description:"Eventually Consistent DDD (ECD3)",source:"@site/docs/eventual-consistency.md",sourceDirName:".",slug:"/eventual-consistency",permalink:"/docs/eventual-consistency",draft:!1,editUrl:"https://github.com/sonallux/sonallux.github.io/tree/main/docs/eventual-consistency.md",tags:[{label:"java",permalink:"/docs/tags/java"},{label:"test-containers",permalink:"/docs/tags/test-containers"},{label:"eventual-consistency",permalink:"/docs/tags/eventual-consistency"},{label:"database",permalink:"/docs/tags/database"},{label:"distributed-system",permalink:"/docs/tags/distributed-system"}],version:"current",frontMatter:{tags:["java","test-containers","eventual-consistency","database","distributed-system"]},sidebar:"defaultSidebar",previous:{title:"Testing",permalink:"/docs/frontend/testing"},next:{title:"GitHub Codespaces",permalink:"/docs/github-codespaces"}},l={},c=[{value:"Eventually Consistent DDD (ECD3)",id:"eventually-consistent-ddd-ecd3",level:2},{value:"Lost Update and isolation levels of databases",id:"lost-update-and-isolation-levels-of-databases",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"eventual-consistency"},"Eventual Consistency"),(0,s.kt)("h2",{id:"eventually-consistent-ddd-ecd3"},"Eventually Consistent DDD (ECD3)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/EventuallyConsistentDDD/design-guidelines"},"Software architecture design guidelines")," for apps running under eventual consistency. Works with domain driven design."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/brausu/workshop-eventual-consistency/tree/main/monotonic-shopping-card"},"Monotonic shopping cart example")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://entwickler.de/reader/my-events/w-jax/jax-architecture-design/628b5aa461292f001d720097"},"W-JAX 2022: Keeping CALM \u2013 Konsistenz in verteilten Systemen leichtgemacht")," von Susanne Braun"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://entwickler.de/reader/my-events/w-jax/jax-architecture-design/628b5aa461292f001d7200a6"},"W-JAX 2022: Eventual Consistency \u2013 Du musst keine Angst haben!")," von Susanne Braun")),(0,s.kt)("h2",{id:"lost-update-and-isolation-levels-of-databases"},"Lost Update and isolation levels of databases"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/brausu/workshop-eventual-consistency/blob/main/multithreaded-transaction-tests/src/test/java/org/ecd3/samples/transactions/PostgreSQLLostUpdateTest.java"},"Code example with PostgreSQL")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/brausu/workshop-eventual-consistency/blob/main/multithreaded-transaction-tests/src/test/java/org/ecd3/samples/transactions/MySQLLostUpdateTest.java"},"Code example with MySQL"))))}d.isMDXComponent=!0}}]);