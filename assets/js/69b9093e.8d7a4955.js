"use strict";(self.webpackChunksonallux_github_io=self.webpackChunksonallux_github_io||[]).push([[46],{2815:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>r});var s=n(4848),a=n(8453);const i={tags:["java","test-containers","eventual-consistency","database","distributed-system"]},o="Eventual Consistency",l={id:"eventual-consistency",title:"Eventual Consistency",description:"Eventually Consistent DDD (ECD3)",source:"@site/docs/eventual-consistency.md",sourceDirName:".",slug:"/eventual-consistency",permalink:"/docs/eventual-consistency",draft:!1,unlisted:!1,editUrl:"https://github.com/sonallux/sonallux.github.io/tree/main/docs/eventual-consistency.md",tags:[{label:"java",permalink:"/docs/tags/java"},{label:"test-containers",permalink:"/docs/tags/test-containers"},{label:"eventual-consistency",permalink:"/docs/tags/eventual-consistency"},{label:"database",permalink:"/docs/tags/database"},{label:"distributed-system",permalink:"/docs/tags/distributed-system"}],version:"current",frontMatter:{tags:["java","test-containers","eventual-consistency","database","distributed-system"]},sidebar:"defaultSidebar",previous:{title:"RxJS",permalink:"/docs/javascript/rxjs"},next:{title:"GitHub Codespaces",permalink:"/docs/github-codespaces"}},c={},r=[{value:"Eventually Consistent DDD (ECD3)",id:"eventually-consistent-ddd-ecd3",level:2},{value:"Lost Update and isolation levels of databases",id:"lost-update-and-isolation-levels-of-databases",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",li:"li",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"eventual-consistency",children:"Eventual Consistency"}),"\n",(0,s.jsx)(t.h2,{id:"eventually-consistent-ddd-ecd3",children:"Eventually Consistent DDD (ECD3)"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/EventuallyConsistentDDD/design-guidelines",children:"Software architecture design guidelines"})," for apps running under eventual consistency. Works with domain driven design."]}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/brausu/workshop-eventual-consistency/tree/main/monotonic-shopping-card",children:"Monotonic shopping cart example"})}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://entwickler.de/reader/my-events/w-jax/jax-architecture-design/628b5aa461292f001d720097",children:"W-JAX 2022: Keeping CALM \u2013 Konsistenz in verteilten Systemen leichtgemacht"})," von Susanne Braun"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://entwickler.de/reader/my-events/w-jax/jax-architecture-design/628b5aa461292f001d7200a6",children:"W-JAX 2022: Eventual Consistency \u2013 Du musst keine Angst haben!"})," von Susanne Braun"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"lost-update-and-isolation-levels-of-databases",children:"Lost Update and isolation levels of databases"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/brausu/workshop-eventual-consistency/blob/main/multithreaded-transaction-tests/src/test/java/org/ecd3/samples/transactions/PostgreSQLLostUpdateTest.java",children:"Code example with PostgreSQL"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/brausu/workshop-eventual-consistency/blob/main/multithreaded-transaction-tests/src/test/java/org/ecd3/samples/transactions/MySQLLostUpdateTest.java",children:"Code example with MySQL"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const a={},i=s.createContext(a);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);